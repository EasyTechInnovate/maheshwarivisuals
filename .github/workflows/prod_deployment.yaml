name: Deploy to Server Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy All Applications
        env:
          DEPLOY_HOST: ${{ secrets.SERVER_IP }}
          DEPLOY_USER: ${{ secrets.SERVER_USER }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.DEPLOY_GITHUB_TOKEN }}
          DOMAIN: prod-fd-md.manishdashsharma.site
        run: |
          ssh $DEPLOY_USER@$DEPLOY_HOST "
            REPO_PATH='/home/prod'
            
            # Check if it's already a git repository
            if [ -d \"\$REPO_PATH/.git\" ]; then
              echo '🔄 Repository exists, updating...'
              cd \$REPO_PATH
              git remote set-url origin https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/$GITHUB_REPO.git
              git fetch origin main
              git reset --hard origin/main
              git clean -fd
              echo '✅ Repository updated'
            else
              # Directory exists but not a git repo
              echo '📥 Initializing repository in existing directory...'
              cd \$REPO_PATH
              git init
              git remote add origin https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/$GITHUB_REPO.git
              git fetch origin main
              git checkout -b main origin/main
              echo '✅ Repository initialized'
            fi
            
            echo ''
            echo '════════════════════════════════════════'
            echo '🚀 Deploying Client (Next.js) - PRODUCTION...'
            echo '════════════════════════════════════════'
            
            cd \$REPO_PATH/client
            
            if [ ! -f \".env\" ]; then
              echo '❌ Error: client .env not found'
              exit 1
            fi
            
            echo '📦 Installing dependencies...'
            npm install
            
            echo '🔨 Building application...'
            npm run build
            
            echo '▶️  Starting PM2 process...'
            pm2 restart prod-next-app || pm2 start npm --name 'prod-next-app' -- start -- -p 8080
            
            echo '✅ Client deployed successfully!'
            
            echo ''
            echo '════════════════════════════════════════'
            echo '🚀 Deploying Admin Panel - PRODUCTION...'
            echo '════════════════════════════════════════'
            
            cd \$REPO_PATH/admin
            
            if [ ! -f \".env\" ]; then
              echo '❌ Error: admin .env not found'
              exit 1
            fi
            
            echo '📦 Installing dependencies...'
            npm install
            
            echo '🔨 Building application...'
            npm run build
            
            echo '✅ Admin deployed successfully!'
            
            echo ''
            echo '════════════════════════════════════════'
            echo '🚀 Deploying User App (React) - PRODUCTION...'
            echo '════════════════════════════════════════'
            
            cd \$REPO_PATH/app
            
            if [ ! -f \".env\" ]; then
              echo '❌ Error: app .env not found'
              exit 1
            fi
            
            echo '📦 Installing dependencies...'
            npm install
            
            echo '🔨 Building application...'
            npm run build
            
            echo '✅ App deployed successfully!'
            
            echo ''
            echo '🔄 Reloading Nginx...'
            systemctl reload nginx
            
            echo ''
            echo '════════════════════════════════════════'
            echo '✨ Production deployment completed successfully!'
            echo '════════════════════════════════════════'
          "

      - name: Verify Deployment
        run: |
          echo "⏳ Waiting for Production services to start..."
          sleep 30
          echo "🔍 Verifying Production service availability..."
          curl -f -s -S --retry 3 --retry-delay 5 -I https://prod-fd-md.manishdashsharma.site || {
            echo "❌ Production Service verification failed"
            exit 1
          }